// <auto-generated />
using DB.DB_Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DB.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AdvertisementExpense", b =>
                {
                    b.Property<int>("AdvertisementsID")
                        .HasColumnType("int");

                    b.Property<int>("ExpensesID")
                        .HasColumnType("int");

                    b.HasKey("AdvertisementsID", "ExpensesID");

                    b.HasIndex("ExpensesID");

                    b.ToTable("AdvertisementExpense");
                });

            modelBuilder.Entity("DyplomAPI.Models.Advertisement", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Cathegory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ImageID")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VolonteerInfoID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("VolonteerInfoID");

                    b.ToTable("Advertisements");
                });

            modelBuilder.Entity("DyplomAPI.Models.Expense", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("ExpenseNumber")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VolonteerInfoID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("VolonteerInfoID");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("DyplomAPI.Models.Organization", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resource")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("DyplomAPI.Models.OrganizationMember", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("OrganizationID")
                        .HasColumnType("int");

                    b.Property<int>("VolonteerInfoID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("OrganizationID");

                    b.HasIndex("VolonteerInfoID")
                        .IsUnique();

                    b.ToTable("OrganizationMembers");
                });

            modelBuilder.Entity("DyplomAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsVolonteer")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DyplomAPI.Models.VolonteerInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UserID")
                        .IsUnique();

                    b.ToTable("VolonteerInfos");
                });

            modelBuilder.Entity("AdvertisementExpense", b =>
                {
                    b.HasOne("DyplomAPI.Models.Advertisement", null)
                        .WithMany()
                        .HasForeignKey("AdvertisementsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DyplomAPI.Models.Expense", null)
                        .WithMany()
                        .HasForeignKey("ExpensesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DyplomAPI.Models.Advertisement", b =>
                {
                    b.HasOne("DyplomAPI.Models.VolonteerInfo", "VolonteerInfo")
                        .WithMany("Advertisements")
                        .HasForeignKey("VolonteerInfoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VolonteerInfo");
                });

            modelBuilder.Entity("DyplomAPI.Models.Expense", b =>
                {
                    b.HasOne("DyplomAPI.Models.VolonteerInfo", "VolonteerInfo")
                        .WithMany("Expenses")
                        .HasForeignKey("VolonteerInfoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VolonteerInfo");
                });

            modelBuilder.Entity("DyplomAPI.Models.OrganizationMember", b =>
                {
                    b.HasOne("DyplomAPI.Models.Organization", "Organization")
                        .WithMany("OrganizationMember")
                        .HasForeignKey("OrganizationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DyplomAPI.Models.VolonteerInfo", "VolonteerInfo")
                        .WithOne("OrganizationMember")
                        .HasForeignKey("DyplomAPI.Models.OrganizationMember", "VolonteerInfoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");

                    b.Navigation("VolonteerInfo");
                });

            modelBuilder.Entity("DyplomAPI.Models.VolonteerInfo", b =>
                {
                    b.HasOne("DyplomAPI.Models.User", "User")
                        .WithOne("VolonteerInfo")
                        .HasForeignKey("DyplomAPI.Models.VolonteerInfo", "UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DyplomAPI.Models.Organization", b =>
                {
                    b.Navigation("OrganizationMember");
                });

            modelBuilder.Entity("DyplomAPI.Models.User", b =>
                {
                    b.Navigation("VolonteerInfo")
                        .IsRequired();
                });

            modelBuilder.Entity("DyplomAPI.Models.VolonteerInfo", b =>
                {
                    b.Navigation("Advertisements");

                    b.Navigation("Expenses");

                    b.Navigation("OrganizationMember")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
